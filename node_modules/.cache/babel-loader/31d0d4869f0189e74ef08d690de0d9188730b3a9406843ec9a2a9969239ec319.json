{"ast":null,"code":"var _jsxFileName = \"/Users/amanda/Documents/wedding-website-github/src/pages/HITTAHIT.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport supabase from '../supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RSVP() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [attending, setAttending] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Log the data to be sent\n    console.log('Submitting RSVP with:', {\n      email,\n      name,\n      attending\n    });\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('RSVP').insert([{\n        name,\n        email,\n        attending\n      }]);\n      if (error) {\n        throw error;\n      }\n\n      // If successful, log the data and set the submitted state\n      console.log('RSVP submitted successfully:', data);\n      setSubmitted(true);\n      setErrorMessage(''); // Clear any previous error message\n    } catch (error) {\n      // Log the error and show an error message to the user\n      console.error('Error submitting RSVP:', error);\n      setErrorMessage('There was an issue submitting your RSVP. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Will you be attending?\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: attending,\n          onChange: e => setAttending(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Thank you for your RSVP!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RSVP, \"4Yr51HNjfdTeoMA5w/9/jH98PlY=\");\n_c = RSVP;\nexport default RSVP;\n\n/*\nimport React, { useState } from 'react';\nimport supabase from '../supabaseClient';\n\nfunction RSVP() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [attending, setAttending] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { data, error } = await supabase\n      .from('rsvps')\n      .insert([{ email, name, attending }]);\n\n    if (!error) {\n      setSubmitted(true);\n    } else {\n      console.error('Error submitting RSVP:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>RSVP</h1>\n      {!submitted ? (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <label>\n            Will you be attending?\n            <input\n              type=\"checkbox\"\n              checked={attending}\n              onChange={(e) => setAttending(e.target.checked)}\n            />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      ) : (\n        <p>Thank you for your RSVP!</p>\n      )}\n    </div>\n  );\n}\n\nexport default RSVP;\n*/\nvar _c;\n$RefreshReg$(_c, \"RSVP\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","RSVP","_s","email","setEmail","name","setName","attending","setAttending","submitted","setSubmitted","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","console","log","data","error","from","insert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","checked","style","color","_c","$RefreshReg$"],"sources":["/Users/amanda/Documents/wedding-website-github/src/pages/HITTAHIT.js"],"sourcesContent":["import React, { useState } from 'react';\nimport supabase from '../supabaseClient';\n\nfunction RSVP() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [attending, setAttending] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Log the data to be sent\n    console.log('Submitting RSVP with:', { email, name, attending });\n\n    try {\n      const { data, error } = await supabase\n        .from('RSVP')\n        .insert([{ name, email, attending }]);\n\n      if (error) {\n        throw error;\n      }\n\n      // If successful, log the data and set the submitted state\n      console.log('RSVP submitted successfully:', data);\n      setSubmitted(true);\n      setErrorMessage(''); // Clear any previous error message\n\n    } catch (error) {\n      // Log the error and show an error message to the user\n      console.error('Error submitting RSVP:', error);\n      setErrorMessage('There was an issue submitting your RSVP. Please try again.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>RSVP</h1>\n      {!submitted ? (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <label>\n            Will you be attending?\n            <input\n              type=\"checkbox\"\n              checked={attending}\n              onChange={(e) => setAttending(e.target.checked)}\n            />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      ) : (\n        <p>Thank you for your RSVP!</p>\n      )}\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n    </div>\n  );\n}\n\nexport default RSVP;\n\n\n\n\n\n\n/*\nimport React, { useState } from 'react';\nimport supabase from '../supabaseClient';\n\nfunction RSVP() {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [attending, setAttending] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { data, error } = await supabase\n      .from('rsvps')\n      .insert([{ email, name, attending }]);\n\n    if (!error) {\n      setSubmitted(true);\n    } else {\n      console.error('Error submitting RSVP:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>RSVP</h1>\n      {!submitted ? (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n          <label>\n            Will you be attending?\n            <input\n              type=\"checkbox\"\n              checked={attending}\n              onChange={(e) => setAttending(e.target.checked)}\n            />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n      ) : (\n        <p>Thank you for your RSVP!</p>\n      )}\n    </div>\n  );\n}\n\nexport default RSVP;\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}